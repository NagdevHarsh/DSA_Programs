Given two strings needle and haystack, return the index of the first occurrence of 
needle in haystack, or -1 if needle is not part of haystack.

CODE:
class Solution {
public:
    int strStr(string haystack, string needle) {
        int n = haystack.length();
        int m = needle.length();

        // Loop through the haystack only until the remaining length is enough for a match
        for (int i = 0; i <= n - m; i++) {
            if (haystack.substr(i, m) == needle)
                return i;
        }

        return -1; // No match found
    }
};
Time Complexity:
O((n - m + 1) * m) in the worst case, because for each position, you're comparing m characters.
But using substr internally might make it a little slower due to memory allocation.
